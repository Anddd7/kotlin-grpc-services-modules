package com.github.anddd7.client.orders

import com.github.anddd7.client.orders.dto.CreateOrderCommand
import com.github.anddd7.client.orders.dto.Order
import org.springframework.cloud.openfeign.FeignClient
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RequestMethod

/**
 * This is generated by customized template
 */

@FeignClient(name = "OrderControllerApi", url = "http://localhost:9090")
interface OrderControllerApi {
    @RequestMapping(method = [RequestMethod.GET], path = ["/orders"])
    fun all(): kotlin.collections.List<Order>

    @RequestMapping(method = [RequestMethod.POST], path = ["/orders"])
    fun create(@org.springframework.web.bind.annotation.RequestBody createOrderCommand: CreateOrderCommand): kotlin.String

    @RequestMapping(method = [RequestMethod.GET], path = ["/orders/{id}"])
    fun one(@org.springframework.web.bind.annotation.PathVariable id: kotlin.String, ): Order

    @RequestMapping(method = [RequestMethod.POST], path = ["/orders/{path1}/{path2}"])
    fun test(@org.springframework.web.bind.annotation.PathVariable path1: kotlin.String, @org.springframework.web.bind.annotation.PathVariable path2: kotlin.String, @org.springframework.web.bind.annotation.RequestParam query1: kotlin.String?, @org.springframework.web.bind.annotation.RequestParam query2: kotlin.String, @org.springframework.web.bind.annotation.RequestBody order: Order): Unit

    @RequestMapping(method = [RequestMethod.PUT], path = ["/orders/{id}"])
    fun update(@org.springframework.web.bind.annotation.PathVariable id: kotlin.String, @org.springframework.web.bind.annotation.RequestBody order: Order): Unit

}
